@page "/register"
@inject Services.UserService UserService
@inject NavigationManager Navigation
@using ModernToDoApp.Models

<h3>Register</h3>
@if (error)
{
    <div class="alert alert-success" role="alert">
        Registration successful! Welcome, @userRegistration.Username!
    </div>
}
else
{
    <EditForm Model="userRegistration" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" class="form-control" @bind-Value="userRegistration.Username" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="userRegistration.Password" />
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="userRegistration.Email" />
        </div>
        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Register</button>
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3" role="alert">
                Registration failed! @errorMessage
            </div>
        }
    </EditForm>
}
@code {
    private User userRegistration = new User();
    private string errorMessage = string.Empty;
    private bool error = false;
    private async Task HandleRegister()
    {
        var response = await UserService.CreateUserAsync(userRegistration);
        if (response.IsSuccessStatusCode)
        {
            // Handle successful registration (e.g., redirect to login page)
            Navigation.NavigateTo("/login");
        }
        else
        {
            // Handle registration failure
            var responeMessage = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Registration failed: {responeMessage}");
            errorMessage = responeMessage;
            error = false;
        }

    }


}
